

buildscript {
    ext.kotlin_version = "1.3.30"

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
}

group 'com.telecomdesign'
version '1.0.2a'

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "maven"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    compile "com.google.code.gson:gson:2.8.5"
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation "com.squareup.retrofit2:retrofit:2.5.0"
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation "io.reactivex.rxjava2:rxjava:2.2.9"
    api "org.slf4j:slf4j-api:$slf4j_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


task javadocJar(type: Jar) {
    classifier = "javadoc"
    from javadoc
}


task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allSource
}



uploadArchives {
    repositories {
        mavenDeployer {
            if (project.version.endsWith('-SNAPSHOT')) {
                repository(url: "https://nexus.insgroup.fr/repository/insgroup_snapshot") {
                    authentication(userName: jenkinsUsername, password: jenkinsPassword)
                }
            } else {
                repository(url: "https://nexus.insgroup.fr/repository/insgroup_release") {
                    authentication(userName: jenkinsUsername, password: jenkinsPassword)
                }
            }
        }
    }
}